{\rtf1\ansi\deff0\deftab720{\fonttbl{\f0\fmodern Courier New;}}
{\colortbl\red0\green0\blue0;\red255\green255\blue255;\red200\green200\blue200;\red0\green0\blue0;\red160\green160\blue160;\red190\green190\blue230;\red128\green128\blue255;\red0\green128\blue128;\red128\green0\blue0;\red240\green0\blue240;\red240\green200\blue240;\red0\green0\blue160;\red135\green135\blue200;\red0\green160\blue0;\red154\green200\blue154;\red190\green0\blue190;\red190\green137\blue190;\red0\green0\blue255;\red190\green190\blue255;\red224\green160\blue0;\red224\green206\blue159;\red132\green160\blue132;\red255\green0\blue0;\red255\green200\blue200;\red128\green255\blue255;\red64\green64\blue128;\red133\green133\blue172;}
{\info{\comment Generated by the Code::Blocks RTF Exporter plugin}
{\title Untitled}}

\deflang1033\pard\plain\f0\fs16 \cb3\cf13 #include <iostream>
\par #include <cmath>
\par \cb3\cf11\b using namespace \b0\cb3\cf13\b std\b0\cb3\cf22 ;
\par \cb3\cf11\b class \b0\cb1\cf0 square\cb3\cf22 \{
\par \cb3\cf11\b private\b0\cb3\cf22 :
\par     \cb3\cf11\b float \b0\cb1\cf0 a\cb3\cf22 ;
\par \cb3\cf11\b public\b0\cb3\cf22 :
\par     \cb1\cf0 square\cb3\cf22 (\cb3\cf11\b float\b0\cb3\cf22 =\cb3\cf9 0\cb3\cf22 );
\par     \cb3\cf11\b float \b0\cb1\cf0 geta\cb3\cf22 ()\{\cb3\cf11\b return \b0\cb1\cf0 a\cb3\cf22 ;\}
\par     \cb3\cf11\b void \b0\cb1\cf0 seta\cb3\cf22 (\cb3\cf11\b float \b0\cb1\cf0 a1\cb3\cf22 )
\par     \{
\par         \cb1\cf0 a\cb3\cf22 =(\cb1\cf0 a1\cb3\cf22 <\cb3\cf9 0\cb3\cf22 ?\cb3\cf9 0.0\cb3\cf22 :\cb1\cf0 a1\cb3\cf22 );
\par     \}
\par     \cb3\cf11\b float \b0\cb1\cf0 perimeter\cb3\cf22 ()\{\cb3\cf11\b return \b0\cb3\cf9 4\cb3\cf22 *\cb1\cf0 a\cb3\cf22 ;\}
\par     \cb3\cf11\b float \b0\cb1\cf0 surface\cb3\cf22 ()\{\cb3\cf11\b return \b0\cb1\cf0 a\cb3\cf22 *\cb1\cf0 a\cb3\cf22 ;\}
\par     \cb3\cf11\b void \b0\cb1\cf0 print\cb3\cf22 ()
\par     \{
\par         \cb3\cf13\b cout\b0\cb3\cf22 <<\cb3\cf17 "\\side a:"\cb3\cf22 <<\cb1\cf0 a\cb3\cf22 <<\cb3\cf17 "\\tsurface: "\cb3\cf22 <<\cb1\cf0 surface\cb3\cf22 ()<<\cb3\cf17 "\\tperimeter: "\cb3\cf22 <<\cb1\cf0 perimeter\cb3\cf22 ()<<\cb3\cf13\b endl\b0\cb3\cf22 ;
\par 
\par     \}
\par 
\par \};
\par \cb1\cf0 square\cb3\cf22 ::\cb1\cf0 square\cb3\cf22 (\cb3\cf11\b float \b0\cb1\cf0 a1\cb3\cf22 ):\cb1\cf0 a\cb3\cf22 (\cb1\cf0 a1\cb3\cf22 )
\par \{
\par     \cb3\cf5 //seta(a1);
\par \cb3\cf22 \}
\par 
\par \cb3\cf11\b class \b0\cb1\cf0 pyramid\cb3\cf22 : \cb3\cf11\b public \b0\cb1\cf0 square\cb3\cf22 \{
\par \cb3\cf11\b private\b0\cb3\cf22 :
\par     \cb3\cf11\b float \b0\cb1\cf0 H\cb3\cf22 ;
\par \cb3\cf11\b public\b0\cb3\cf22 :
\par     \cb1\cf0 pyramid\cb3\cf22 (\cb3\cf11\b float \b0\cb3\cf22 =\cb3\cf9 0.0\cb3\cf22 , \cb3\cf11\b float \b0\cb3\cf22 =\cb3\cf9 0.0\cb3\cf22 );
\par     \cb3\cf11\b float \b0\cb1\cf0 geth\cb3\cf22 ()\{\cb3\cf11\b return \b0\cb1\cf0 H\cb3\cf22 ;\}
\par     \cb3\cf11\b void \b0\cb1\cf0 setH\cb3\cf22 (\cb3\cf11\b float \b0\cb1\cf0 h1\cb3\cf22 )
\par     \{
\par         \cb1\cf0 H\cb3\cf22 =(\cb1\cf0 h1\cb3\cf22 >=\cb3\cf9 0.0\cb3\cf22 ? \cb1\cf0 h1\cb3\cf22 :\cb3\cf9 0.0\cb3\cf22 );
\par     \}
\par 
\par     \cb3\cf11\b float \b0\cb1\cf0 surface\cb3\cf22 ()
\par     \{
\par         \cb3\cf11\b float \b0\cb1\cf0 ha\cb3\cf22 =\cb1\cf0 sqrt\cb3\cf22 (\cb1\cf0 H\cb3\cf22 *\cb1\cf0 H \cb3\cf22 + (\cb1\cf0 geta\cb3\cf22 ()/\cb3\cf9 2\cb3\cf22 )*(\cb1\cf0 geta\cb3\cf22 ()/\cb3\cf9 2\cb3\cf22 ));
\par         \cb3\cf11\b float \b0\cb1\cf0 sa\cb3\cf22 =(\cb1\cf0 geta\cb3\cf22 ()*\cb1\cf0 ha\cb3\cf22 )/\cb3\cf9 2\cb3\cf22 ;
\par 
\par         \cb3\cf11\b return \b0\cb3\cf22 (\cb3\cf9 4\cb3\cf22 *\cb1\cf0 sa \cb3\cf22 + \cb1\cf0 square\cb3\cf22 ::\cb1\cf0 surface\cb3\cf22 ());
\par 
\par     \}
\par 
\par     \cb3\cf11\b float \b0\cb1\cf0 volume\cb3\cf22 ()
\par     \{
\par         \cb3\cf11\b return \b0\cb3\cf22 (\cb1\cf0 square\cb3\cf22 ::\cb1\cf0 surface\cb3\cf22 ()*\cb1\cf0 H\cb3\cf22 )/\cb3\cf9 3\cb3\cf22 ;
\par     \}
\par     \cb3\cf11\b void \b0\cb1\cf0 print\cb3\cf22 ()
\par     \{
\par         \cb3\cf13\b cout\b0\cb3\cf22 <<\cb3\cf17 "\\nBasis:"\cb3\cf22 ;
\par         \cb1\cf0 square\cb3\cf22 ::\cb1\cf0 print\cb3\cf22 ();
\par         \cb3\cf13\b cout\b0\cb3\cf22 <<\cb3\cf17 "\\nHeight: "\cb3\cf22 <<\cb1\cf0 H\cb3\cf22 <<\cb3\cf17 "\\tPyramid surface:"\cb3\cf22 <<\cb1\cf0 surface\cb3\cf22 ()<<\cb3\cf13\b endl\b0\cb3\cf22 ;
\par         \}
\par \};
\par 
\par \cb1\cf0 pyramid\cb3\cf22 ::\cb1\cf0 pyramid\cb3\cf22 (\cb3\cf11\b float \b0\cb1\cf0 a1\cb3\cf22 , \cb3\cf11\b float \b0\cb1\cf0 h1\cb3\cf22 )\cb3\cf5 //:square(a1)
\par \cb3\cf22 \{   \cb3\cf5 //a=a1; error access to private member
\par     \cb1\cf0 seta\cb3\cf22 (\cb1\cf0 a1\cb3\cf22 );
\par     \cb1\cf0 setH\cb3\cf22 (\cb1\cf0 h1\cb3\cf22 );
\par \}
\par \cb3\cf11\b int \b0\cb1\cf0 main\cb3\cf22 ()
\par \{
\par   \cb1\cf0 square sq\cb3\cf22 ;
\par   \cb3\cf13\b cout\b0\cb3\cf22 <<\cb3\cf17 "\\nInitial square data:"\cb3\cf22 ;
\par   \cb1\cf0 sq\cb3\cf22 .\cb1\cf0 print\cb3\cf22 ();
\par 
\par   \cb1\cf0 sq\cb3\cf22 .\cb1\cf0 seta\cb3\cf22 (\cb3\cf9 4\cb3\cf22 );
\par    \cb3\cf13\b cout\b0\cb3\cf22 <<\cb3\cf17 "\\nAfter modify with set, square data:"\cb3\cf22 ;
\par   \cb1\cf0 sq\cb3\cf22 .\cb1\cf0 print\cb3\cf22 ();
\par 
\par   \cb1\cf0 pyramid p\cb3\cf22 (\cb3\cf9 2\cb3\cf22 , \cb3\cf9 6\cb3\cf22 );
\par   \cb3\cf13\b cout\b0\cb3\cf22 <<\cb3\cf17 "\\noutput of p.print():\\n"\cb3\cf22 ;
\par   \cb1\cf0 p\cb3\cf22 .\cb1\cf0 print\cb3\cf22 ();\cb3\cf5 // print() of derived class pyramid is called
\par   \cb1\cf0 square \cb3\cf22 *\cb1\cf0 ptr\cb3\cf22 =&\cb1\cf0 p\cb3\cf22 ; \cb3\cf5 //base class pointer aimed at derived class object
\par    \cb3\cf13\b cout\b0\cb3\cf22 <<\cb3\cf17 "\\noutput of ptr->print():\\n"\cb3\cf22 ;
\par   \cb1\cf0 ptr\cb3\cf22 ->\cb1\cf0 print\cb3\cf22 ();\cb3\cf5 // print() of base class square is called
\par     \cb3\cf11\b return \b0\cb3\cf9 0\cb3\cf22 ;
\par \}
\par }